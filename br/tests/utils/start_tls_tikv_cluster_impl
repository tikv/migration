#!/bin/bash

# --workdir: work directory
# --tlsdir: certificates directory

set -e

OUT_DIR=
TLS_DIR=
API_VERSION=

while [[ ${1} ]]; do
	case "${1}" in
	--workdir)
		OUT_DIR=${2}
		shift
		;;
	--tlsdir)
		TLS_DIR=${2}
		shift
		;;
	--api_version)
		API_VERSION=${2}
		shift
		;;
	*)
		echo "Unknown parameter: ${1}" >&2
		exit 1
		;;
	esac

	if ! shift; then
		echo 'Missing parameter argument.' >&2
		exit 1
	fi
done

CUR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
source $CUR/test_prepare

cd $OUT_DIR && echo "start tikv cluster in $OUT_DIR"

cat - >"$OUT_DIR/pd-config-tls.toml" <<EOF
[replication]
# The number of replicas for each region.
max-replicas = 1
[security]
cacert-path = "$TLS_DIR/ca.pem"
cert-path = "$TLS_DIR/server.pem"
key-path = "$TLS_DIR/server-key.pem"
EOF

echo "Starting TLS PD..."
pd-server \
	--client-urls https://${TLS_PD_HOST}:${TLS_PD_PORT} \
	--peer-urls https://${TLS_PD_HOST}:${TLS_PD_PEER_PORT} \
	--config "$OUT_DIR/pd-config-tls.toml" \
	--log-file "$OUT_DIR/pd_tls.log" \
	--data-dir "$OUT_DIR/pd_tls" &

# wait until PD is online...
retry_max=30
retry_cnt=0
while ! curl --cacert $TLS_DIR/ca.pem \
	--cert $TLS_DIR/client.pem \
	--key $TLS_DIR/client-key.pem \
	-o /dev/null -sf https://${TLS_PD_HOST}:${TLS_PD_PORT}/pd/api/v1/version; do
	if [ $retry_cnt -ge $retry_max ]; then 
		echo "wait pd online timeout"
		exit 1
	fi
	retry_cnt=$(($retry_cnt+1))
	sleep 1
done

retry_cnt=0
while [ -z "$(curl --cacert $TLS_DIR/ca.pem \
	--cert $TLS_DIR/client.pem \
	--key $TLS_DIR/client-key.pem \
	https://${TLS_PD_HOST}:${TLS_PD_PORT}/pd/api/v1/health 2>/dev/null | grep 'health' | grep 'true')" ]; do
	if [ $retry_cnt -ge $retry_max ]; then 
		echo "wait pd healthy timeout"
		exit 1
	fi
	retry_cnt=$(($retry_cnt+1))
	sleep 1
done

echo "PD is online and healthy"

# Tries to limit the max number of open files under the system limit
cat - >"$OUT_DIR/tikv-config-tls.toml" <<EOF
[storage]
api-version = $API_VERSION
enable-ttl = true
# Disable creating a large temp file.
reserve-space = "0MB"
[rocksdb]
max-open-files = 4096
[raftdb]
max-open-files = 4096
[raftstore]
# true (default value) for high reliability, this can prevent data loss when power failure.
sync-log = false
[security]
ca-path = "$TLS_DIR/ca.pem"
cert-path = "$TLS_DIR/server.pem"
key-path = "$TLS_DIR/server-key.pem"
EOF

echo "Starting TLS TiKV..."

# Uncomment to turn on grpc versbose log.
# GRPC_VERBOSITY=debug \
# GRPC_TRACE=server_channel,call_error,handshaker,tsi \
tikv-server \
	--pd ${TLS_PD_HOST}:${TLS_PD_PORT} \
	-A ${TLS_TIKV_HOST}:${TLS_TIKV_PORT} \
	--status-addr ${TLS_TIKV_HOST}:${TLS_TIKV_STATUS_PORT} \
	--log-file "$OUT_DIR/tikv_tls.log" \
	-C "$OUT_DIR/tikv-config-tls.toml" \
	-s "$OUT_DIR/tikv_tls" &>$OUT_DIR/tikv_tls.stdout &

sleep 2

ps -aux|grep "tikv-server\|pd-server"
